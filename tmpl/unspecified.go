// 2023 FMNX team.
// Use of this code is governed by GNU General Public License.
// Additional information can be found on official web page: https://fmnx.su/
// Contact email: help@fmnx.su

package tmpl

import "github.com/fatih/color"

// This package contains string templates for utility command output.
// Output might be modified based on configuration - prettyprint.

const Cobra = `{{if gt (len .Aliases) 0}}Aliases:
{{.NameAndAliases}}{{end}}{{if .HasAvailableSubCommands}}{{$cmds := .Commands}}{{if eq (len .Groups) 0}}Available Commands:{{range $cmds}}{{if (or .IsAvailableCommand (eq .Name "help"))}}
{{rpad .Name .NamePadding }} {{.Short}}{{end}}{{end}}{{else}}{{range $group := .Groups}}

{{.Title}}{{range $cmds}}{{if (and (eq .GroupID $group.ID) (or .IsAvailableCommand (eq .Name "help")))}}
{{rpad .Name .NamePadding }} {{.Short}}{{end}}{{end}}{{end}}{{if not .AllChildCommandsHaveGroup}}

Additional Commands:{{range $cmds}}{{if (and (eq .GroupID "") (or .IsAvailableCommand (eq .Name "help")))}}
{{rpad .Name .NamePadding }} {{.Short}}{{end}}{{end}}{{end}}{{end}}{{end}}{{if .HasAvailableLocalFlags}}{{end}}
`

const PKGBUILD = `# PKGBUILD generated by pack.
# More info at: https://fmnx.su/core/pack

pkgname="%s"
pkgdesc="Something awesome"
pkgver=` + "`git describe --tags`" + `
pkgrel="1"
arch=("any")
url="%s"

# Edit runtime dependencies
depends=(
  "python"
  "vlc"
)

# Edit build dependencies
makedepends=(
  "flutter"
  "clang"
  "cmake"
)

build() {
  cd ..
  # Example build command
  make build
}

package() {
  cd ..
  # Example of file installation
  install -Dm755 example $pkgdir/usr/bin/example
  # Example of dir installation
  cd build/bundle && find . -type f -exec install -Dm755 {} $pkgdir/etc/share/example/{} \; && cd $srcdir/..
}
`

var PrettyConfig = `-----------------------------------------------------------
                 PACK RUNTIME CONFIGURATION

Do not reinstall the targets that are already up to date.
 - ` + color.YellowString(`needed`) + `: %s

Remove installed dependencies after a successful build.
 - ` + color.YellowString(`remove-build-deps`) + `: %s

Remove repositories with sources/PKGBUILDs after installation.
 - ` + color.YellowString(`remove-git-repos`) + `: %s

Cache packages after installation with pack.
 - ` + color.YellowString(`cache-packages`) + `: %s

Show output of every executed system call.
 - ` + color.YellowString(`verbose-output`) + `: %s

Enable colors and emoji in CLI output.
 - ` + color.YellowString(`pretty-print`) + `: %s

Location where pack will store repositories with sources.
 - ` + color.YellowString(`repo-cache-dir`) + `: %s

Location where pack will store built .pkg.tar.zst packages.
 - ` + color.YellowString(`package-cache-dir`) + `: %s

File containg log verbose outputs for last pack command.
 - ` + color.YellowString(`log-file`) + `: %s

File with pack package mapped to pacman packages.
 - ` + color.YellowString(`map-file`) + `: %s

File containing number of the process of executed pack command.
 - ` + color.YellowString(`lock-file`) + `: %s

Configuration file: ` + color.BlueString(`~/.pack/config.yml`) + `
-----------------------------------------------------------
`

const PrettyDesc = `--------------------------------
Name        : %s
Version     : %s
Description : %s
Size        : %s
Url         : %s
BuildDate   : %s
PackName    : %s
PackVersion : %s
PackBranch  : %s
DependsOn   : %s
RequiredBy  : %s
`

const PkgbuildList = `source ./PKGBUILD;
for i in ${%s[@]}; do
    echo $i
done`
